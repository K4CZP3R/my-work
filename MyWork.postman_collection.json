{
	"info": {
		"_postman_id": "e89875fc-c91d-4505-b402-4a21cc02a4e6",
		"name": "MyWork",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Work",
			"item": [
				{
					"name": "Get Work (all)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()[0]\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"work_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8080/work",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"work"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Work specific",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"work_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/work/{{work_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"work",
								"{{work_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update work",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"work_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"employers\": [\"{{employer_id}}\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/work/{{work_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"work",
								"{{work_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create work",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"work_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"RL - Irek\",\r\n    \"hour_loan\": 10.00\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/work",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"work"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employer",
			"item": [
				{
					"name": "Get Employer (all)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()[0]\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"employer_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8080/employer",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"employer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employer specific",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"employer_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8080/employer/{{employer_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"employer",
								"{{employer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update employer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"employer_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"address\": \"Lisztgaarde 60, 5344EG Oss\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/employer/{{employer_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"employer",
								"{{employer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create employer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"work_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ireneusz Teodorowski\",\r\n    \"email\": \"avonteodor@interia.eu\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/employer",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"employer"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Event",
			"item": [
				{
					"name": "Get Event (all)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()[0]\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"event_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8080/event",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Event",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"event_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/event/{{event_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"event",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"event_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"WizzAir\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/event/{{event_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"event",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"event_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"work\": \"{{work_id}}\",\r\n    \"from_time\": 0.0,\r\n    \"to_time\": 3600.0,\r\n    \"based_on_hour_loan\": true,\r\n    \"loan_on_top\": 10.00,\r\n    \"name\": \"Test\",\r\n    \"description\": \"Een andere event hihi.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/event",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"event"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Report",
			"item": [
				{
					"name": "Get Report (all)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()[0]\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"report_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8080/report",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"report_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/report/{{report_id}}",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"report",
								"{{report_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Report Pdf",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"report_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/report/{{report_id}}/txt",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"report",
								"{{report_id}}",
								"txt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has _id. We are setting id\", () => {\r",
									"    var all_response =  pm.response.json()\r",
									"    var _id = all_response._id\r",
									"    pm.expect(_id).to.be.a('string');\r",
									"    pm.environment.set(\"report_id\", _id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"work_id\": \"{{work_id}}\",\r\n    \"events_ids\": [\"{{event_id}}\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/report",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"report"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response has token. We are setting token\", () => {",
									"    var all_response =  pm.response.json()",
									"    var token = all_response.access_token",
									"    pm.expect(token).to.be.a('string');",
									"    pm.environment.set(\"token\", token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "kacper",
									"type": "text"
								},
								{
									"key": "password",
									"value": "kacper",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}